{
    "openapi": "3.0.3",
    "info": {
        "title": "Nigeria Geographic Data API",
        "description": "High-performance API for comprehensive Nigerian geographic data including states, LGAs, wards, and postal codes. Optimized for fast response times with direct database access.",
        "version": "1.0.0",
        "contact": {
            "name": "Nigeria Geo API Support",
            "email": "support@nigeriageoapi.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://20.63.52.179:3000",
            "description": "Production server"
        },
        {
            "url": "http://localhost:3000",
            "description": "Development server"
        }
    ],
    "tags": [
        {
            "name": "States",
            "description": "Nigerian states management"
        },
        {
            "name": "LGAs",
            "description": "Local Government Areas management"
        },
        {
            "name": "Wards",
            "description": "Wards management"
        },
        {
            "name": "Postal Codes",
            "description": "Postal codes and geographic data"
        },
        {
            "name": "Address Validation",
            "description": "Address validation and suggestions"
        },
        {
            "name": "Search",
            "description": "Search across all geographic entities"
        },
        {
            "name": "Health",
            "description": "API health and status endpoints"
        }
    ],
    "externalDocs": {
        "description": "Complete coverage of Nigerian geographic data",
        "url": "https://github.com/mubarakhammed/3609ja"
    },
    "x-data-coverage": {
        "states": 37,
        "lgas": 774,
        "wards": 8840,
        "postal_codes": 8840,
        "description": "Complete administrative divisions of Nigeria as of 2024"
    },
    "x-performance": {
        "architecture": "Direct database access for optimal performance",
        "database": "PostgreSQL with optimized connection pooling",
        "response_time": "< 500ms for most endpoints",
        "availability": "99.9% uptime SLA"
    },
    "paths": {
        "/api/v1/states": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get all states with pagination",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponseStateDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/states/{id}": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get state by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "State ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "State found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/states/{id}/lgas": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get LGAs by state ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "State ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of LGAs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponseLgaDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/lgas/{id}": {
            "get": {
                "tags": [
                    "LGAs"
                ],
                "summary": "Get LGA by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "LGA ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "LGA found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LgaDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "LGA not found"
                    }
                }
            }
        },
        "/api/v1/lgas/{id}/wards": {
            "get": {
                "tags": [
                    "LGAs"
                ],
                "summary": "Get wards by LGA ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "LGA ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of wards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponseWardDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wards/{id}": {
            "get": {
                "tags": [
                    "Wards"
                ],
                "summary": "Get ward by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Ward ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ward found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WardDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ward not found"
                    }
                }
            }
        },
        "/api/v1/wards/{id}/postal-codes": {
            "get": {
                "tags": [
                    "Wards"
                ],
                "summary": "Get postal codes by ward ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Ward ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of postal codes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponsePostalCodeDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/postal-codes/{id}": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Get postal code by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Postal code ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal code found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostalCodeDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Postal code not found"
                    }
                }
            }
        },
        "/api/v1/postal-codes/code/{code}": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Get postal code by code",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "description": "Postal code",
                        "schema": {
                            "type": "string",
                            "example": "100001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal code found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostalCodeDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Postal code not found"
                    }
                }
            }
        },
        "/api/v1/postal-codes/nearby": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Find nearby postal codes",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "required": true,
                        "description": "Latitude",
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 6.6059
                        }
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "required": true,
                        "description": "Longitude",
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 3.3515
                        }
                    },
                    {
                        "name": "radius_km",
                        "in": "query",
                        "required": false,
                        "description": "Search radius in kilometers",
                        "schema": {
                            "type": "number",
                            "format": "double",
                            "example": 10.0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of nearby postal codes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostalCodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/validate": {
            "post": {
                "tags": [
                    "Address Validation"
                ],
                "summary": "Validate a Nigerian address",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressValidationRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressValidationResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/address/find": {
            "get": {
                "tags": [
                    "Address Validation"
                ],
                "summary": "Find address by components",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "description": "State name",
                        "schema": {
                            "type": "string",
                            "example": "Lagos"
                        }
                    },
                    {
                        "name": "lga",
                        "in": "query",
                        "required": true,
                        "description": "LGA name",
                        "schema": {
                            "type": "string",
                            "example": "Ikeja"
                        }
                    },
                    {
                        "name": "ward",
                        "in": "query",
                        "required": true,
                        "description": "Ward name",
                        "schema": {
                            "type": "string",
                            "example": "Ikeja"
                        }
                    },
                    {
                        "name": "postal_code",
                        "in": "query",
                        "required": true,
                        "description": "Postal code",
                        "schema": {
                            "type": "string",
                            "example": "100001"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressDto"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    }
                }
            }
        },
        "/api/v1/address/similar": {
            "post": {
                "tags": [
                    "Address Validation"
                ],
                "summary": "Find similar addresses",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressValidationRequestDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of similar addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AddressDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search across all entities",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "schema": {
                            "type": "string",
                            "example": "Lagos"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResultDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search/states": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search states only",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "schema": {
                            "type": "string",
                            "example": "Lagos"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching states",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StateDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search/lgas": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search LGAs only",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "schema": {
                            "type": "string",
                            "example": "Ikeja"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching LGAs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LgaDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search/wards": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search wards only",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "schema": {
                            "type": "string",
                            "example": "Ikeja"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching wards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WardDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/search/postal-codes": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search postal codes only",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "description": "Search query",
                        "schema": {
                            "type": "string",
                            "example": "100001"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number (1-based)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching postal codes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostalCodeDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "API health check",
                "description": "Check the health status of the API including database connectivity",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponseDto"
                                },
                                "example": {
                                    "status": "healthy",
                                    "timestamp": "2024-01-01T00:00:00Z",
                                    "database": "connected",
                                    "version": "1.0.0",
                                    "uptime": "2h 30m 15s"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "API is unhealthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponseDto"
                                },
                                "example": {
                                    "status": "unhealthy",
                                    "timestamp": "2024-01-01T00:00:00Z",
                                    "database": "disconnected",
                                    "version": "1.0.0",
                                    "uptime": "2h 30m 15s"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StateDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the state",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the state",
                        "example": "Lagos"
                    },
                    "code": {
                        "type": "string",
                        "description": "State code (e.g., NG-LA)",
                        "example": "NG-LA"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "code",
                    "created_at",
                    "updated_at"
                ]
            },
            "LgaDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the LGA",
                        "example": "650e8400-e29b-41d4-a716-446655440001"
                    },
                    "state_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the parent state",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the LGA",
                        "example": "Ikeja"
                    },
                    "code": {
                        "type": "string",
                        "description": "LGA code (e.g., NG-LA-01)",
                        "example": "NG-LA-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                },
                "required": [
                    "id",
                    "state_id",
                    "name",
                    "code",
                    "created_at",
                    "updated_at"
                ]
            },
            "WardDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the ward",
                        "example": "750e8400-e29b-41d4-a716-446655440001"
                    },
                    "lga_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the parent LGA",
                        "example": "650e8400-e29b-41d4-a716-446655440001"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the ward",
                        "example": "Ikeja"
                    },
                    "code": {
                        "type": "string",
                        "description": "Ward code (e.g., NG-LA-01-01)",
                        "example": "NG-LA-01-01"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                },
                "required": [
                    "id",
                    "lga_id",
                    "name",
                    "code",
                    "created_at",
                    "updated_at"
                ]
            },
            "PostalCodeDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique identifier for the postal code",
                        "example": "850e8400-e29b-41d4-a716-446655440001"
                    },
                    "ward_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the parent ward",
                        "example": "750e8400-e29b-41d4-a716-446655440001"
                    },
                    "postal_code": {
                        "type": "string",
                        "description": "Postal code",
                        "example": "100001"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double",
                        "description": "Latitude coordinate",
                        "example": 6.6059
                    },
                    "lng": {
                        "type": "number",
                        "format": "double",
                        "description": "Longitude coordinate",
                        "example": 3.3515
                    },
                    "urban": {
                        "type": "boolean",
                        "description": "Whether this is an urban area",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp"
                    }
                },
                "required": [
                    "id",
                    "ward_id",
                    "postal_code",
                    "urban",
                    "created_at",
                    "updated_at"
                ]
            },
            "AddressDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/StateDto"
                    },
                    "lga": {
                        "$ref": "#/components/schemas/LgaDto"
                    },
                    "ward": {
                        "$ref": "#/components/schemas/WardDto"
                    },
                    "postal_code": {
                        "$ref": "#/components/schemas/PostalCodeDto"
                    }
                },
                "required": [
                    "state",
                    "lga",
                    "ward",
                    "postal_code"
                ]
            },
            "AddressValidationRequestDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "State name",
                        "example": "Lagos"
                    },
                    "lga": {
                        "type": "string",
                        "description": "Local Government Area name",
                        "example": "Ikeja"
                    },
                    "ward": {
                        "type": "string",
                        "description": "Ward name",
                        "example": "Ikeja"
                    },
                    "postal_code": {
                        "type": "string",
                        "description": "Postal code",
                        "example": "100001"
                    }
                },
                "required": [
                    "state",
                    "lga",
                    "ward",
                    "postal_code"
                ]
            },
            "AddressValidationResponseDto": {
                "type": "object",
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "description": "Whether the address is valid",
                        "example": true
                    },
                    "canonical": {
                        "$ref": "#/components/schemas/AddressDto"
                    },
                    "suggestions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressSuggestionDto"
                        },
                        "description": "Suggested corrections if invalid"
                    }
                },
                "required": [
                    "valid",
                    "suggestions"
                ]
            },
            "AddressSuggestionDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "$ref": "#/components/schemas/StateDto"
                    },
                    "lga": {
                        "$ref": "#/components/schemas/LgaDto"
                    },
                    "ward": {
                        "$ref": "#/components/schemas/WardDto"
                    },
                    "postal_code": {
                        "$ref": "#/components/schemas/PostalCodeDto"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Reason for suggestion",
                        "example": "Similar name found"
                    },
                    "confidence": {
                        "type": "number",
                        "format": "double",
                        "description": "Confidence score (0.0 to 1.0)",
                        "minimum": 0.0,
                        "maximum": 1.0,
                        "example": 0.85
                    }
                },
                "required": [
                    "reason",
                    "confidence"
                ]
            },
            "PaginationMeta": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Current page number",
                        "example": 1
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Items per page",
                        "example": 20
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of items",
                        "example": 100
                    },
                    "total_pages": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "example": 5
                    },
                    "has_next": {
                        "type": "boolean",
                        "description": "Whether there is a next page",
                        "example": true
                    },
                    "has_prev": {
                        "type": "boolean",
                        "description": "Whether there is a previous page",
                        "example": false
                    }
                },
                "required": [
                    "page",
                    "limit",
                    "total",
                    "total_pages",
                    "has_next",
                    "has_prev"
                ]
            },
            "PaginatedResponseStateDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StateDto"
                        },
                        "description": "Array of data items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "required": [
                    "data",
                    "pagination"
                ]
            },
            "PaginatedResponseLgaDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LgaDto"
                        },
                        "description": "Array of data items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "required": [
                    "data",
                    "pagination"
                ]
            },
            "PaginatedResponseWardDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WardDto"
                        },
                        "description": "Array of data items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "required": [
                    "data",
                    "pagination"
                ]
            },
            "PaginatedResponsePostalCodeDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostalCodeDto"
                        },
                        "description": "Array of data items"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "required": [
                    "data",
                    "pagination"
                ]
            },
            "SearchResultDto": {
                "type": "object",
                "properties": {
                    "states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StateDto"
                        }
                    },
                    "lgas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LgaDto"
                        }
                    },
                    "wards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WardDto"
                        }
                    },
                    "postal_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostalCodeDto"
                        }
                    }
                },
                "required": [
                    "states",
                    "lgas",
                    "wards",
                    "postal_codes"
                ]
            },
            "HealthResponseDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "healthy",
                            "unhealthy"
                        ],
                        "description": "Overall health status of the API"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the health check"
                    },
                    "database": {
                        "type": "string",
                        "enum": [
                            "connected",
                            "disconnected"
                        ],
                        "description": "Database connection status"
                    },
                    "version": {
                        "type": "string",
                        "description": "API version"
                    },
                    "uptime": {
                        "type": "string",
                        "description": "API uptime duration"
                    }
                },
                "required": [
                    "status",
                    "timestamp",
                    "database",
                    "version"
                ]
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "Optional API key for usage tracking and rate limiting"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        },
        {}
    ]
}